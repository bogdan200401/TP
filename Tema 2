PROBLEMA 1

#include <stdio.h>
#include <stdlib.h>

typedef struct{
  char nume[30];
  float nota;
}rezultat;
int comparare(const void *v1, const void *v2)
{
  const rezultat *p1=(const rezultat*)v1;
  const rezultat *p2=(const rezultat*)v2;
  if((p1->nota)>(p2->nota))
    return 1;
  else
    if((p1->nota)==(p2->nota))
      {
	if(strcmp(p1->nume,p2->nume)>0)
	  return 1;
	else
	  return -1;
      }
    else
      return -1;
}
int main()
{
  int n,i;
  printf("Introduceti numarul: ");
  scanf("%d",&n);
  rezultat *v;
  if((v=malloc(n*sizeof(rezultat)))==NULL)
  {
    printf("Eroare la alocare dinamica!!!\n");
    exit(EXIT_FAILURE);
  }
  for(i=0;i<n;i++)
  {
    scanf("%s",v[i].nume);
    scanf("%f",&v[i].nota);
  }
  qsort(v,n,sizeof(rezultat),comparare);
for(i=0;i<n;i++)
  {
    printf("%s  %f\n",v[i].nume,v[i].nota);
  }
 free(v);
  return 0;
}



PROBLEMA 2


#include <stdio.h>
#include <stdlib.h>
int negativ(int e)
{
  return e<0;
}
void testare(int *v,int *n,int(*cond)(int))
{
  int i;
  for(i=0;i<*n;i++)
    {
      if(cond(v[i]))
	{
	  for(int j=i;j<*n-1;j++)
	    v[j]=v[j+1];
	  *n=*n-1;
	}
    }
}
int main()
{
  int ok=5;
  int v[5]={4,-8,1,-2,0};
  testare(v,&ok,negativ);
  for(int i;i<ok;i++)
    printf("%d ",v[i]);
  return 0;
}



PROBLEMA 3

#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <string.h>
 

int cmpe(const void *elem1,const void *elem2)
{
    
    const float *p1=(const float*)elem1;
    const float *p2=(const float*)elem2;

    if( *p1< *p2)
        return -1;
    if(*p1>*p2)
        return 1;
    return 0;
}

int main(void)
{
    FILE *fin;
    
    fin=fopen("date.txt","r");

    int n,nn;
    int i;
    float x;

    fscanf(fin,"%d",&n);

    float v[n];
    float *p;

    for(i=0;i<n;i++)
    {
        fscanf(fin,"%f",&v[i]);
    }

    fscanf(fin,"%d",&x);
    p=&x;

    for(i=0;i<n;i++)
        printf("%f ",v[i]);
    printf("\n");

    qsort(v,n,sizeof(float),cmpe);

    for(i=0;i<n;i++)
        printf("%f ",v[i]);
    printf("\n");

    if((bsearch(p,v,n,sizeof(float),cmpe))==NULL)
        printf("nu\n");
    else
        printf("da\n");
    
    fclose(fin);
    return 0;
}


EXAMEN 1


#include <stdio.h>
#include <math.h>

void tabela_functie(double (*func)(double), double A, double B, double P)
{
    printf("x\t| f(x)\n");
    printf("--------------------\n");

    for (double x = A; x <= B; x = x + P)
    {
        double result = func(x);
        printf("%.2f\t| %.2f\n", x, result);
    }
}

double functie1(double x)
{
    return (x * x * x + 4) / (x * x + 5);
}

double functie2(double x)
{
    return x + 10;
}

double functie3(double x)
{
    return 2 * x * x - 1;
}

int main()
{
    double A, B, P;
    printf("Introduceti intervalul [A, B]: ");
    scanf("%lf %lf", &A, &B);

    printf("Introduceti pasul P: ");
    scanf("%lf", &P);

    printf("\nTabelare functie 1:\n");
    tabela_functie(functie1, A, B, P);

    printf("\nTabelare functie 2:\n");
    tabela_functie(functie2, A, B, P);

    printf("\nTabelare functie 3:\n");
    tabela_functie(functie3, A, B, P);

    return 0;
}
