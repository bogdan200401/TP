#Problema 3
#include <stdio.h>
#include <stdlib.h>

int main() {
    int m, n;
    printf("Introduceti numarul de linii si de coloane ale matricei: ");
    scanf("%d %d", &m, &n);
    int a[m][n];
    printf("Introduceti elementele matricei:\n");
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &a[i][j]);
        }
    }
    FILE *f = fopen("matrice.bin", "wb");
    if (f == NULL) {
        printf("Eroare la deschiderea fisierului!");
        return 1;
    }
    fwrite(&m, sizeof(int), 1, f);
    fwrite(&n, sizeof(int), 1, f);
    fwrite(a, sizeof(int), m * n, f);
    fclose(f);
    int b[m][n];
    f = fopen("matrice.bin", "rb");
    if (f == NULL) {
        printf("Eroare la deschiderea fisierului!");
        return 1;
    }
    fread(&m, sizeof(int), 1, f);
    fread(&n, sizeof(int), 1, f);
    fread(b, sizeof(int), m * n, f);
    fclose(f);
    printf("Matricea citita din fisier:\n");
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < n; j++) {
            printf("%d ", b[i][j]);
        }
        printf("\n");
    }
    
    return 0;
}

#Problema 4

#include <stdio.h>
#include <stdlib.h>

int main() {
    int m, n;
    printf("Introduceti numarul de linii si de coloane ale matricei: ");
    scanf("%d %d", &m, &n);
    int a[m][n];
    printf("Introduceti elementele matricei:\n");
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &a[i][j]);
        }
    }
    FILE *f = fopen("matrice.bin", "wb");
    if (f == NULL) {
        printf("Eroare la deschiderea fisierului!");
        return 1;
    }
    fwrite(&m, sizeof(int), 1, f);
    fwrite(&n, sizeof(int), 1, f);
    fwrite(a, sizeof(int), m * n, f);
    fclose(f);
    f = fopen("matrice.bin", "rb");
    if (f == NULL) {
        printf("Eroare la deschiderea fisierului!");
        return 1;
    }
    int numarProduse;
    fread(&numarProduse, sizeof(int), 1, f);
    fread(&m, sizeof(int), 1, f);
    fread(&n, sizeof(int), 1, f);
    int b[m][n];
    fread(b, sizeof(int), m * n, f);
    fclose(f);
    printf("Numarul de produse: %d\n", numarProduse);
    printf("Matricea citita din fisier:\n");
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < n; j++) {
            printf("%d ", b[i][j]);
        }
        printf("\n");
    }
    return 0;
}

#Problema 6

#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[]) {
    if (argc != 3) {
        printf("Utilizare: %s <fisier1> <fisier2>\n", argv[0]);
        return 1;
    }
    FILE *f1 = fopen(argv[1], "rb");
    FILE *f2 = fopen(argv[2], "rb");
    if (f1 == NULL || f2 == NULL) {
        printf("Nu s-a putut deschide unul sau ambele fișiere.\n");
        return 1;
    }
    int offset = 0;
    int octet1, octet2;
    while ((octet1 = fgetc(f1)) != EOF && (octet2 = fgetc(f2)) != EOF) {
        if (octet1 != octet2) {
            printf("Diferență la offset-ul %d: %02X - %02X\n", offset, octet1, octet2);
        }
        offset++;
    }
    if (octet1 != EOF || octet2 != EOF) {
        if (f1 != EOF) {
            printf("Fișierul %s are octeți rămași:\n", argv[1]);
            while ((octet1 = fgetc(f1)) != EOF) {
                printf("%02X ", octet1);
            }
            printf("\n");
        }
        if (f2 != EOF) {
            printf("Fișierul %s are octeți rămași:\n", argv[2]);
            while ((octet2 = fgetc(f2)) != EOF) {
                printf("%02X ", octet2);
            }
            printf("\n");
        }
    }
    fclose(f1);
    fclose(f2);
    return 0;
}
